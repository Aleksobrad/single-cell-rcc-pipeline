m.set <- read.table(file, header = TRUE, sep = '\t', stringsAsFactors = FALSE)
marker.sets[[m]] <- m.set$Input
}
## create dummy regulon
#' Creates a dummy regulon from a given gene list.
#'
#' @param gene.list List of genes.
#' @return List with two elements; likelihood and tfmode
MakeReg <- function(gene.list) {
likelihood <- rep(1, length(gene.list))
tf.mode <- rep(1, length(gene.list)); names(tf.mode) <- gene.list
d.reg <- list('tfmode' = tf.mode, 'likelihood' = likelihood)
return(d.reg)
}
raw.mat <- readRDS('C://Users/lvlah/linux/ac_lab/data/pda_olive/mouse-pda_raw.rds')
cpm.mat <- readRDS('C://Users/lvlah/linux/ac_lab/data/pda_olive/mouse-pda_cpm.rds')
rank.mat <- readRDS('C://Users/lvlah/linux/ac_lab/data/pda_olive/mouse-pda_rank.rds')
marker.reg <- list()
for (m in names(marker.sets)) {
m.set <- marker.sets[[m]]
m.set <- lapply(m.set, function(x) { paste(substr(x, 1, 1), tolower(substr(x, 2, nchar(x))), sep = '') })
m.set <- intersect(m.set, rownames(rank.mat))
marker.reg[[as.character(m)]] <- MakeReg(m.set)
}
class(marker.reg) <- "regulon"
## GSEA using marker sets
marker.vip <- viper(rank.mat, marker.reg, method = 'none', minsize = 1)
marker.vip
dim(marker.vip)
library(pheatmap)
library(RColorBrewer)
head(rownames(cpm.mat))
'Cxcr7' %in% rownames(cpm.mat)
'Cxcr7' %in% rownames(raw.mat)
raw.mat <- as.matrix(readMM('C://Users/lvlah/linux/ac_lab/data/pda_olive/count_data/matrix.mtx'))
genes <- read.table('C://Users/lvlah/linux/ac_lab/data/pda_olive/count_data/features.tsv', sep = '\t')
barcodes <- read.table('C://Users/lvlah/linux/ac_lab/data/pda_olive/count_data/barcodes.tsv', sep = '\t')
colnames(raw.mat) <- barcodes[,1]
rownames(raw.mat) <- genes[,1]
'ENSMUSG00000044337' %in% rownames(raw.mat)
filt.mat <- QCTransform(raw.mat)
cpm.mat <- CPMTransform(filt.mat)
'ENSMUSG00000044337' %in% rownames(cpm.mat)
pheatmap(marker.vip, main = 'Mouse GSEA Clust', width = 6, height = 8, scale = 'row',
cluster_rows = FALSE, cluster_cols = TRUE, show_rownames = TRUE, show_colnames = FALSE,
color = colorRampPalette(colors = c('blue', 'white', 'red'))(100),  fontsize_row = 4,
annotation_col = data.frame('Cxcr7' = cpm.mat['ENSMUSG00000044337',]))
pheatmap(marker.vip, main = 'Mouse GSEA Clust', width = 6, height = 8, scale = 'row',
cluster_rows = FALSE, cluster_cols = TRUE, show_rownames = TRUE, show_colnames = FALSE,
color = colorRampPalette(colors = c('blue', 'white', 'red'))(100),  fontsize_row = 8,
annotation_col = data.frame('Cxcr7' = cpm.mat['ENSMUSG00000044337',]))
View(cpm.mat)
head(sort(cpm.mat['ENSMUSG00000044337',]))
head(sort(cpm.mat['ENSMUSG00000044337',], decreasing = TRUE))
pheatmap(marker.vip, main = 'Mouse GSEA Clust', width = 6, height = 8, scale = 'row',
cluster_rows = FALSE, cluster_cols = TRUE, show_rownames = TRUE, show_colnames = FALSE,
color = colorRampPalette(colors = c('blue', 'white', 'red'))(100),  fontsize_row = 8,
annotation_col = data.frame('Cxcr7' = raw.mat['ENSMUSG00000044337', colnames(marker.vip)]))
library(cluster)
## clustering
gsea.clust <- pam(t(marker.vip), k = 5)
gsea.clust$clustering
pheatmap(marker.vip[, names(sort(gsea.clust$clustering)) ], main = 'Mouse GSEA Clust', width = 6, height = 8, scale = 'row',
cluster_rows = FALSE, cluster_cols = FALSE, show_rownames = FALSE, show_colnames = FALSE,
color = colorRampPalette(colors = c('blue', 'white', 'red'))(100),  fontsize_row = 8,
annotation_col = annot.df)
annot.df <- data.frame('clust' = gsea.clust$clustering, 'Cxcr7' = cpm.mat['ENSMUSG00000044337', ])
pheatmap(marker.vip[, names(sort(gsea.clust$clustering)) ], main = 'Mouse GSEA Clust', width = 6, height = 8, scale = 'row',
cluster_rows = FALSE, cluster_cols = FALSE, show_rownames = FALSE, show_colnames = FALSE,
color = colorRampPalette(colors = c('blue', 'white', 'red'))(100),  fontsize_row = 8,
annotation_col = annot.df)
annot.df <- data.frame('clust' = gsea.clust$clustering, 'Cxcr7' = cpm.mat['ENSMUSG00000044337', names(gsea.clust$clustering)])
pheatmap(marker.vip[, names(sort(gsea.clust$clustering)) ], main = 'Mouse GSEA Clust', width = 6, height = 8, scale = 'row',
cluster_rows = FALSE, cluster_cols = FALSE, show_rownames = FALSE, show_colnames = FALSE,
color = colorRampPalette(colors = c('blue', 'white', 'red'))(100),  fontsize_row = 8,
annotation_col = annot.df)
annot.df <- data.frame('clust' = as.factor(gsea.clust$clustering), 'Cxcr7' = cpm.mat['ENSMUSG00000044337', names(gsea.clust$clustering)])
pheatmap(marker.vip[, names(sort(gsea.clust$clustering)) ], main = 'Mouse GSEA Clust', width = 6, height = 8, scale = 'row',
cluster_rows = FALSE, cluster_cols = FALSE, show_rownames = FALSE, show_colnames = FALSE,
color = colorRampPalette(colors = c('blue', 'white', 'red'))(100),  fontsize_row = 8,
annotation_col = annot.df)
pheatmap(marker.vip[, names(sort(gsea.clust$clustering)) ], main = 'Mouse GSEA Clust', width = 6, height = 8, scale = 'row',
cluster_rows = FALSE, cluster_cols = FALSE, show_rownames = TRUE, show_colnames = FALSE,
color = colorRampPalette(colors = c('blue', 'white', 'red'))(100),  fontsize_row = 8,
annotation_col = annot.df)
## get average expression for each clsuter
for (i in 1:5) {
clust.cells <- which(gsea.clust$clustering == i)
mean.exp <- mean(cpm.mat['ENSMUSG00000044337', clust.cells])
print(mean.exp)
}
### HUMAN ###
raw.human.mat <- readRDS('C://Users/lvlah/linux/ac_lab/data/pda_olive/ht99_geneExp.rds')
## convert to gene symbol
raw.human.mat <- Ensemble2GeneName(raw.human.mat)
cpm.human.mat <- CPMTransform(raw.human.mat)
rank.human.mat <- RankTransform(cpm.human.mat)
saveRDS(cpm.human.mat, 'C://Users/lvlah/linux/ac_lab/data/pda_olive/ht99_cpm.rds')
saveRDS(rank.human.mat, 'C://Users/lvlah/linux/ac_lab/data/pda_olive/ht99_rank.rds')
## create human marker set
marker.human.reg <- list()
for (m in names(marker.sets)) {
m.set <- marker.sets[[m]]
m.set <- lapply(m.set, function(x) { paste(substr(x, 1, 1), tolower(substr(x, 2, nchar(x))), sep = '') })
m.set <- intersect(m.set, rownames(rank.human.mat))
marker.human.reg[[as.character(m)]] <- MakeReg(m.set)
}
class(marker.human.reg) <- "regulon"
## GSEA using marker set
marker.human.vip <- viper(rank.mat, marker.reg, method = 'none')
## GSEA using marker set
marker.human.vip <- viper(rank.mat, marker.reg, method = 'none', minsize = 1)
head(rownames(cpm.human.mat))
'CXCR7' %in% rownames(cpm.human.mat)
'ACKR3' %in% rownames(cpm.human.mat)
gsea.clust.human <- pam(t(marker.human.vip), k = 5)
## pheatmap
annot.df <- data.frame('clust' = as.factor(gsea.clust.human$clustering), 'Cxcr7' = cpm.human.mat['ACKR3', names(gsea.clust.human$clustering)])
pheatmap(marker.vip[, names(sort(gsea.clust$clustering)) ], main = 'Mouse GSEA Clust', width = 6, height = 8, scale = 'row',
cluster_rows = FALSE, cluster_cols = FALSE, show_rownames = TRUE, show_colnames = FALSE,
color = colorRampPalette(colors = c('blue', 'white', 'red'))(100),  fontsize_row = 8,
annotation_col = annot.df)
## pheatmap
annot.df <- data.frame('clust' = as.factor(gsea.clust.human$clustering), 'Cxcr7' = cpm.human.mat['ACKR3', names(gsea.clust.human$clustering)])
pheatmap(marker.human.vip[, names(sort(gsea.clust.human$clustering)) ], main = 'Human GSEA Clust', width = 6, height = 8, scale = 'row',
cluster_rows = FALSE, cluster_cols = FALSE, show_rownames = TRUE, show_colnames = FALSE,
color = colorRampPalette(colors = c('blue', 'white', 'red'))(100),  fontsize_row = 8,
annotation_col = annot.df)
## pheatmap
annot.df <- data.frame('clust' = as.factor(gsea.clust.human$clustering), 'Cxcr7' = cpm.human.mat['ACKR3', names(gsea.clust.human$clustering)])
## pheatmap
annot.df <- data.frame('clust' = as.factor(gsea.clust.human$clustering), 'Cxcr7' = cpm.human.mat['ACKR3', ])
dim(marker.human.vip)
dim(cpm.human.mat)
## create human marker set
marker.human.reg <- list()
for (m in names(marker.sets)) {
m.set <- marker.sets[[m]]
m.set <- intersect(m.set, rownames(rank.human.mat))
marker.human.reg[[as.character(m)]] <- MakeReg(m.set)
}
class(marker.human.reg) <- "regulon"
marker.human.vip <- viper(rank.human.mat, marker.reg, method = 'none', minsize = 1)
m.set
marker.human.vip <- viper(rank.human.mat, marker.human.reg, method = 'none', minsize = 1)
## clustering
gsea.clust.human <- pam(t(marker.human.vip), k = 5)
## pheatmap
annot.df <- data.frame('clust' = as.factor(gsea.clust.human$clustering), 'Cxcr7' = cpm.human.mat['ACKR3', ])
pheatmap(marker.human.vip[, names(sort(gsea.clust.human$clustering)) ], main = 'Human GSEA Clust', width = 6, height = 8, scale = 'row',
cluster_rows = FALSE, cluster_cols = FALSE, show_rownames = TRUE, show_colnames = FALSE,
color = colorRampPalette(colors = c('blue', 'white', 'red'))(100),  fontsize_row = 8,
annotation_col = annot.df)
## get average expression for each clsuter
for (i in 1:5) {
clust.cells <- which(gsea.clust$clustering == i)
mean.exp <- mean(cpm.mat['ENSMUSG00000044337', clust.cells])
print(mean.exp)
}
## get average expression for each clsuter
for (i in 1:5) {
clust.cells <- which(gsea.clust.human$clustering == i)
mean.exp <- mean(cpm.human.mat['ENSMUSG00000044337', clust.cells])
print(mean.exp)
}
## get average expression for each clsuter
for (i in 1:5) {
clust.cells <- which(gsea.clust.human$clustering == i)
mean.exp <- mean(cpm.human.mat['ACKR3', clust.cells])
print(mean.exp)
}
### MOUSE ###
raw.mat <- readRDS('C://Users/lvlah/linux/ac_lab/data/pda_olive/mouse-pda_raw.rds')
cpm.mat <- readRDS('C://Users/lvlah/linux/ac_lab/data/pda_olive/mouse-pda_cpm.rds')
rank.mat <- readRDS('C://Users/lvlah/linux/ac_lab/data/pda_olive/mouse-pda_rank.rds')
'Rdc1' %in% rownames(cpm.mat)
'Cxcr7' %in% rownames(cpm.mat)
head(rownames(cpm.mat))
'Cxcr7' %in% rownames(raw.mat)
'Rdc1' %in% rownames(raw.mat)
'Ackr3' %in% rownames(raw.mat)
'Ackr3' %in% rownames(cpm.mat)
?viperSignature
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/process-utils.R')
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/cluster-functions.R')
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/viper-utils.R')
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/process-utils.R')
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/cluster-functions.R')
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/viper-utils.R')
## PIPELINE r2
r2.pAct <- readRDS('C://Users/lvlah/linux/ac_lab/data/pda_olive/mps_r2-pAct.rds')
r2.cbcMRs <- CBCMRs(r2.pAct) # identify the most representative proteins
r2.pAct.cbc <- r2.pAct[ r2.cbcMRs ,] # filter the protein activity matrix
r2.louvain <- LouvainClust(r2.pAct.cbc) # perform clustering analysis
r2.cbcUMAP <- CustomUMAP(r2.pAct.cbc)
ClusterScatter(r2.cbcUMAP, r2.louvain, 'Viper Clustering (Louvain)')
m.set
marker.sets
markers <- c('Ackr3', marker.sets$endothelial)
markers
markers <- c('Ackr3', lapply(marker.sets$endothelial, function(x) { paste(substr(x, 1, 1), tolower(substr(x, 2, nchar(x))), sep = '') })
)
markers
markers <- c('Ackr3', unlist( lapply(marker.sets$endothelial, function(x)
{ paste(substr(x, 1, 1), tolower(substr(x, 2, nchar(x))), sep = '') })))
markers
MarkerGrid(r2.cbcUMAP, r2.louvain, r2.pAct, markers, 'Endothelial Marker Activity')
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/process-utils.R')
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/cluster-functions.R')
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/viper-utils.R')
MarkerGrid(r2.cbcUMAP, r2.louvain, r2.pAct, markers, 'Endothelial Marker Activity')
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/process-utils.R')
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/cluster-functions.R')
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/viper-utils.R')
MarkerGrid(r2.cbcUMAP, r2.louvain, r2.pAct, markers, 'Endothelial Marker Activity')
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/process-utils.R')
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/cluster-functions.R')
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/viper-utils.R')
MarkerGrid(r2.cbcUMAP, r2.louvain, r2.pAct, markers, 'Endothelial Marker Activity')
dev.off()
MarkerGrid(r2.cbcUMAP, r2.louvain, r2.pAct, markers, 'Endothelial Marker Activity')
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/cluster-functions.R'\
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/cluster-functions.R'
)
MarkerGrid(r2.cbcUMAP, r2.louvain, r2.pAct, markers, 'Endothelial Marker Activity')
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/cluster-functions.R')
MarkerGrid(r2.cbcUMAP, r2.louvain, r2.pAct, markers, 'Endothelial Marker Activity')
length(markers)
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/cluster-functions.R')
length(markers)
MarkerGrid(r2.cbcUMAP, r2.louvain, r2.pAct, markers, 'Endothelial Marker Activity')
markers <- c('Ackr3', unlist( lapply(marker.sets$epithelial, function(x)
{ paste(substr(x, 1, 1), tolower(substr(x, 2, nchar(x))), sep = '') })))
MarkerGrid(r2.cbcUMAP, r2.louvain, r2.pAct, markers, 'Epithelial Marker Activity')
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/cluster-functions.R')
markers <- c('Ackr3', unlist( lapply(marker.sets$endothelial, function(x)
{ paste(substr(x, 1, 1), tolower(substr(x, 2, nchar(x))), sep = '') })))
MarkerGrid(r2.cbcUMAP, r2.louvain, r2.pAct, markers, 'Endothelial Marker Activity')
markers <- c('Ackr3', unlist( lapply(marker.sets$epithelial, function(x)
{ paste(substr(x, 1, 1), tolower(substr(x, 2, nchar(x))), sep = '') })))
MarkerGrid(r2.cbcUMAP, r2.louvain, r2.pAct, markers, 'Epithelial Marker Activity')
markers <- c('Ackr3', unlist( lapply(marker.sets$fibroblast, function(x)
{ paste(substr(x, 1, 1), tolower(substr(x, 2, nchar(x))), sep = '') })))
MarkerGrid(r2.cbcUMAP, r2.louvain, r2.pAct, markers, 'Fibroblast Marker Activity')
markers <- c('Ackr3', unlist( lapply(marker.sets$immune, function(x)
{ paste(substr(x, 1, 1), tolower(substr(x, 2, nchar(x))), sep = '') })))
MarkerGrid(r2.cbcUMAP, r2.louvain, r2.pAct, markers, 'Immune Marker Activity')
markers <- c('Ackr3', unlist( lapply(marker.sets$pericytes, function(x)
{ paste(substr(x, 1, 1), tolower(substr(x, 2, nchar(x))), sep = '') })))
MarkerGrid(r2.cbcUMAP, r2.louvain, r2.pAct, markers, 'Pericyte Marker Activity')
setwd('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/')
r1.pAct <- readRDS('tutorial/pbmc_r1-pAct.rds')
r2.pAct <- readRDS('tutorial/pbmc_r2-pAct.rds')
r2.MRs <- readRDS('tutorial/pbmc_r2-MRs.rds')
source('functions/process-utils.R')
source('functions/cluster-functions.R')
source('functions/viper-utils.R')
library(ggplot2)
library(ggpubr)
library(viper)
library(pheatmap)
library(RColorBrewer)
library(MUDAN)
library(umap)
raw.mat <- readRDS('tutorial/pbmc.rds')
mt.genes <- read.table('mt-genes.csv', header = TRUE, sep = ',', stringsAsFactors = FALSE)
mt.genes <- read.table('mt-genes.csv', header = TRUE, sep = ',', stringsAsFactors = FALSE)
mt.genes
mt.genes <- read.table('mt-genes.csv', header = TRUE, sep = ',', stringsAsFactors = FALSE)
hum.mt <- mt.genes$hum.ensg
QCPlots(raw.mat, hum.mt)
mt.genes <- read.table('mt-genes.csv', header = TRUE, sep = ',', stringsAsFactors = FALSE)
hum.mt <- mt.genes$hum.ensg
QCPlots(raw.mat, hum.mt)
source('functions/process-utils.R')
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/process-utils.R')
mt.genes <- read.table('mt-genes.csv', header = TRUE, sep = ',', stringsAsFactors = FALSE)
hum.mt <- mt.genes$hum.ensg
QCPlots(raw.mat, hum.mt)
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/process-utils.R')
mt.genes <- read.table('mt-genes.csv', header = TRUE, sep = ',', stringsAsFactors = FALSE)
hum.mt <- mt.genes$hum.ensg
QCPlots(raw.mat, hum.mt)
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/process-utils.R')
mt.genes <- read.table('mt-genes.csv', header = TRUE, sep = ',', stringsAsFactors = FALSE)
hum.mt <- mt.genes$hum.ensg
QCPlots(raw.mat, hum.mt)
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/process-utils.R')
mt.genes <- read.table('mt-genes.csv', header = TRUE, sep = ',', stringsAsFactors = FALSE)
hum.mt <- mt.genes$hum.ensg
QCPlots(raw.mat, hum.mt)
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/process-utils.R')
mt.genes <- read.table('mt-genes.csv', header = TRUE, sep = ',', stringsAsFactors = FALSE)
hum.mt <- mt.genes$hum.ensg
QCPlots(raw.mat, hum.mt)
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/process-utils.R')
mt.genes <- read.table('mt-genes.csv', header = TRUE, sep = ',', stringsAsFactors = FALSE)
hum.mt <- mt.genes$hum.ensg
QCPlots(raw.mat, hum.mt)
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/process-utils.R')
mt.genes <- read.table('mt-genes.csv', header = TRUE, sep = ',', stringsAsFactors = FALSE)
hum.mt <- mt.genes$hum.ensg
QCPlots(raw.mat, hum.mt)
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/process-utils.R')
mt.genes <- read.table('mt-genes.csv', header = TRUE, sep = ',', stringsAsFactors = FALSE)
hum.mt <- mt.genes$hum.ensg
QCPlots(raw.mat, hum.mt)
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/process-utils.R')
source('functions/process-utils.R')
source('functions/cluster-functions.R')
source('functions/viper-utils.R')
library(ggplot2)
library(ggpubr)
library(viper)
library(pheatmap)
library(RColorBrewer)
library(MUDAN)
library(umap)
raw.mat <- readRDS('tutorial/pbmc.rds')
mt.genes <- read.table('mt-genes.csv', header = TRUE, sep = ',', stringsAsFactors = FALSE)
hum.mt <- mt.genes$hum.ensg
QCPlots(raw.mat, hum.mt)
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/process-utils.R')
mt.genes <- read.table('mt-genes.csv', header = TRUE, sep = ',', stringsAsFactors = FALSE)
hum.mt <- mt.genes$hum.ensg
QCPlots(raw.mat, hum.mt)
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/process-utils.R')
mt.genes <- read.table('mt-genes.csv', header = TRUE, sep = ',', stringsAsFactors = FALSE)
hum.mt <- mt.genes$hum.ensg
QCPlots(raw.mat, hum.mt)
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/process-utils.R')
mt.genes <- read.table('mt-genes.csv', header = TRUE, sep = ',', stringsAsFactors = FALSE)
hum.mt <- mt.genes$hum.ensg
QCPlots(raw.mat, hum.mt)
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/process-utils.R')
mt.genes <- read.table('mt-genes.csv', header = TRUE, sep = ',', stringsAsFactors = FALSE)
hum.mt <- mt.genes$hum.ensg
QCPlots(raw.mat, hum.mt)
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/process-utils.R')
mt.genes <- read.table('mt-genes.csv', header = TRUE, sep = ',', stringsAsFactors = FALSE)
hum.mt <- mt.genes$hum.ensg
QCPlots(raw.mat, hum.mt)
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/process-utils.R')
mt.genes <- read.table('mt-genes.csv', header = TRUE, sep = ',', stringsAsFactors = FALSE)
hum.mt <- mt.genes$hum.ensg
QCPlots(raw.mat, hum.mt)
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/process-utils.R')
mt.genes <- read.table('mt-genes.csv', header = TRUE, sep = ',', stringsAsFactors = FALSE)
hum.mt <- mt.genes$hum.ensg
QCPlots(raw.mat, hum.mt)
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/process-utils.R')
mt.genes <- read.table('mt-genes.csv', header = TRUE, sep = ',', stringsAsFactors = FALSE)
hum.mt <- mt.genes$hum.ensg
QCPlots(raw.mat, hum.mt)
mt.genes <- read.table('mt-genes.csv', header = TRUE, sep = ',', stringsAsFactors = FALSE)
hum.mt <- mt.genes$hum.ensg
QCPlots(raw.mat, hum.mt)
mt.genes <- read.table('mt-genes.csv', header = TRUE, sep = ',', stringsAsFactors = FALSE)
hum.mt <- mt.genes$hum.ensg
QCPlots(raw.mat, hum.mt)
QCPlots(raw.mat, hum.mt)
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/process-utils.R')
mt.genes <- read.table('mt-genes.csv', header = TRUE, sep = ',', stringsAsFactors = FALSE)
hum.mt <- mt.genes$hum.ensg
QCPlots(raw.mat, hum.mt)
mt.genes <- read.table('mt-genes.csv', header = TRUE, sep = ',', stringsAsFactors = FALSE)
hum.mt <- mt.genes$hum.ensg
QCPlots(raw.mat, hum.mt)
mt.mat <- MTFilter(raw.mat, hum.mt)
filt.mat <- QCTransform(mt.mat)
cpm.mat <- CPMTransform(filt.mat)
rank.mat <- RankTransform(cpm.mat)
r1.net <- readRDS('tutorial/pbmc_r1-net-pruned.rds')
r1.pAct <- viper(rank.mat, r1.net, method = 'none')
r1.viperDist <- as.dist(viperSimilarity(r1.pAct))
r1.clusts <- PamKRange(r1.viperDist, kmin = 2, kmax = 10)
r1.clustSil <- SilScoreEval(r1.clusts, r1.viperDist)
plot.dat <- data.frame('k' = 2:10, 'Silhouette.Scores' = r1.clustSil)
ggplot(plot.dat, aes(x = k, y = Silhouette.Scores)) + geom_point() + geom_line() +
ggtitle('1.1 Clustering Silhouette Scores') + theme_bw()
# load in networks
c1.net <- readRDS('tutorial/pbmc-r2-c1_pruned.rds')
c2.net <- readRDS('tutorial/pbmc-r2-c2_pruned.rds')
c3.net <- readRDS('tutorial/pbmc-r2-c3_pruned.rds')
# infer protein activity
r2.pAct <- viper(rank.mat, list('c1' = c1.net, 'c2' = c2.net, 'c3' = c3.net), method = 'none')
r2.cbcMRs <- CBCMRs(r2.pAct) # identify the most representative proteins
r2.pAct.cbc <- r2.pAct[ r2.cbcMRs ,] # filter the protein activity matrix
r2.louvain <- LouvainClust(r2.pAct.cbc) # perform clustering analysis
r2.cbcUMAP <- CustomUMAP(r2.pAct.cbc)
ClusterScatter(r2.cbcUMAP, r2.louvain, 'Viper Clustering (Louvain)')
r2.pAct.ensg <- r2.pAct
r2.pAct <- Ensemble2GeneName(r2.pAct)
r2.MRs <- BTTestMRs(r2.pAct, r2.louvain)
ClusterHeatmap(r2.pAct[ MR_UnWrap(r2.MRs, top = 10) , ], clust = r2.louvain, plotTitle = 'Louvain Clustering: Differentially Activated Proteins')
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/cluster-functions.R')
ClusterHeatmap(r2.pAct[ MR_UnWrap(r2.MRs, top = 10) , ], clust = r2.louvain, plotTitle = 'Louvain Clustering: Differentially Activated Proteins')
?brewer.pal
ClusterHeatmap(r2.pAct[ MR_UnWrap(r2.MRs, top = 10) , ], clust = r2.louvain, plotTitle = 'Louvain Clustering: Differentially Activated Proteins')
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/cluster-functions.R')
ClusterHeatmap(r2.pAct[ MR_UnWrap(r2.MRs, top = 10) , ], clust = r2.louvain, plotTitle = 'Louvain Clustering: Differentially Activated Proteins')
ClusterHeatmap(r2.pAct[ MR_UnWrap(r2.MRs, top = 10) , ], clust = r2.louvain, plotTitle = 'Louvain Clustering: Differentially Activated Proteins')
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/cluster-functions.R')
ClusterHeatmap(r2.pAct[ MR_UnWrap(r2.MRs, top = 10) , ], clust = r2.louvain, plotTitle = 'Louvain Clustering: Differentially Activated Proteins')
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/cluster-functions.R')
ClusterHeatmap(r2.pAct[ MR_UnWrap(r2.MRs, top = 10) , ], clust = r2.louvain, plotTitle = 'Louvain Clustering: Differentially Activated Proteins')
seq(1,10, 0.5)
seq(min(r2.pAct), max(r2.pAct), (max(r2.pAct) - min(r2.pAct)) / 10)
length(seq(min(r2.pAct), max(r2.pAct), (max(r2.pAct) - min(r2.pAct)) / 10))
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/cluster-functions.R')
ClusterHeatmap(r2.pAct[ MR_UnWrap(r2.MRs, top = 10) , ], clust = r2.louvain, plotTitle = 'Louvain Clustering: Differentially Activated Proteins')
r2.MRs
?pt
anv.mrs <- AnovaMRs(r2.pAct, r2.louvain)
anv.mrs
s.mrs <- GetMRs(r2.pAct, r2.louvain, method = 'Stouffer')
ClusterHeatmap(r2.pAct[ MR_UnWrap(s.mrs, top = 10) ,], clust = r2.louvain)
s.mrs
?sort
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/cluster-functions.R')
s.mrs <- StoufferMRs(r2.pAct, r2.louvain)
s.mrs
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/cluster-functions.R')
s.mrs
s.mrs <- StoufferMRs(r2.pAct, r2.louvain)
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/viper-utils.R')
s.mrs <- StoufferMRs(r2.pAct, r2.louvain)
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/viper-utils.R')
s.mrs <- StoufferMRs(r2.pAct, r2.louvain)
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/viper-utils.R')
s.mrs <- StoufferMRs(r2.pAct, r2.louvain)
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/viper-utils.R')
s.mrs <- StoufferMRs(r2.pAct, r2.louvain)
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/viper-utils.R')
s.mrs <- StoufferMRs(r2.pAct, r2.louvain)
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/viper-utils.R')
s.mrs <- StoufferMRs(r2.pAct, r2.louvain)
r2.louvain
names(which(r2.louvain == 1))
names(which(r2.louvain == '1'))
which(r2.louvain == 1)
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/viper-utils.R')
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/viper-utils.R')
s.mrs <- StoufferMRs(r2.pAct, r2.louvain)
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/viper-utils.R')
s.mrs <- StoufferMRs(r2.pAct, r2.louvain)
ClusterHeatmap(r2.pAct[ MR_UnWrap(s.mrs, top = 10),], clust = r2.louvain)
ClusterHeatmap(r2.pAct[ MR_UnWrap(s.mrs, top = 10),], clust = r2.louvain, plotTitle = 'your mom')
ClusterHeatmap(r2.pAct[ MR_UnWrap(s.mrs, top = 10),], clust = r2.louvain, plotTitle = 'your mom', quantile = FALSE)
?quantile
ClusterHeatmap(r2.pAct[ MR_UnWrap(r2.MRs, top = 10) , ], clust = r2.louvain, plotTitle = 'Louvain Clustering: Differentially Activated Proteins')
ClusterHeatmap(r2.pAct[ MR_UnWrap(r2.MRs, top = 10) , ], clust = r2.louvain, plotTitle = 'Louvain Clustering: Differentially Activated Proteins')
ClusterHeatmap(r2.pAct[ MR_UnWrap(r2.MRs, top = 10) , ], clust = r2.louvain, plotTitle = 'Louvain Clustering: Differentially Activated Proteins')
MR_UnWrap(r2.MRs, top = 10)
r2.MRs$`1`
MR_UnWrap(r2.MRs, top = 10)
head(r2.MRs$`1`)
dat.mat <- r2.pAct[ MR_UnWrap(r2.MRs, top = 10) , ]
clust <- r2.louvain
sorted.cells <- sort(clust)
pheatmap.mat <- dat.mat[, names(sorted.cells)]
num.breaks <- 25
if (quantile) {
mat.breaks <- QuantileBreaks(pheatmap.mat, num.breaks)
} else {
mat.breaks <- seq(min(dat.mat), max(dat.mat), (max(dat.mat) - min(dat.mat)) / num.breaks)
}
annot_color <- ClusterColors(length(unique(clust))); names(annot_color) <- sort(unique(clust))
mat.breaks <- QuantileBreaks(pheatmap.mat, num.breaks)
pheatmap(pheatmap.mat, annotation_col = data.frame('Cluster' = as.factor(clust)),
annotation_colors = list('Cluster' = annot_color),
main = 'fuck', width = 6, height = 8, scale = 'row', fontsize_row = 4,
cluster_rows = FALSE, cluster_cols = FALSE, show_rownames = TRUE, show_colnames = FALSE,
color = colorRampPalette(rev(brewer.pal(11, 'RdBu')))(num.breaks), breaks = mat.breaks)
hist(dat.mat)
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/viper-utils.R')
ClusterHeatmap(r2.pAct[ MR_UnWrap(r2.MRs, top = 10) , ], clust = r2.louvain, plotTitle = 'Louvain Clustering: Differentially Activated Proteins')
ClusterHeatmap(r2.pAct[ MR_UnWrap(r2.MRs, top = 10) , ], clust = r2.louvain, plotTitle = 'Louvain Clustering: Differentially Activated Proteins')
r2.MRs.new <- r2.MRs
setwd('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/')
r1.pAct <- readRDS('tutorial/pbmc_r1-pAct.rds')
r2.pAct <- readRDS('tutorial/pbmc_r2-pAct.rds')
r2.MRs <- readRDS('tutorial/pbmc_r2-MRs.rds')
r2.pAct <- Ensemble2GeneName(r2.pAct)
ClusterHeatmap(r2.pAct[ MR_UnWrap(r2.MRs, top = 10) , ], clust = r2.louvain, plotTitle = 'Louvain Clustering: Differentially Activated Proteins')
r2.MRs
ClusterHeatmap(r2.pAct[ MR_UnWrap(r2.MRs.new, top = 10) , ], clust = r2.louvain, plotTitle = 'Louvain Clustering: Differentially Activated Proteins')
MR_UnWrap(r2.MRs.new, top = 10)
MR_UnWrap(r2.MRs, top = 10)
head(r2.MRs$`1`)
head(r2.MRs.new$`1`)
tail(r2.MRs.new$`1`, 5)
head(r2.MRs$`1`, 10)
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/viper-utils.R')
r2.MRs.new2 <- BTTestMRs(r2.pAct, r2.louvain, bootstrap.num = 10)
source('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/functions/viper-utils.R')
r2.MRs.new2 <- BTTestMRs(r2.pAct, r2.louvain, bootstrap.num = 10)
MR_UnWrap(r2.MRs.new2, top = 10)
head(r2.MRs.new$`1`)
head(r2.MRs.new2$`1`)
head(r2.MRs$`1`)
ClusterHeatmap(r2.pAct[ MR_UnWrap(r2.MRs.new2, top = 10) , ], clust = r2.louvain, plotTitle = 'Louvain Clustering: Differentially Activated Proteins')
ClusterHeatmap(r2.pAct[ MR_UnWrap(r2.MRs.new2, top = 10) , ], clust = r2.louvain, plotTitle = 'Louvain Clustering: Differentially Activated Proteins')
r2.MRs <- BTTestMRs(r2.pAct, r2.louvain)
ClusterHeatmap(r2.pAct[ MR_UnWrap(r2.MRs, top = 10) , ], clust = r2.louvain, plotTitle = 'Louvain Clustering: Differentially Activated Proteins')
markers <- c('CCR7', 'CD8A', 'MS4A1', 'PPBP', 'MS4A7', 'IL7R', 'CD14', 'FCER1A', 'FCGR3A')
MarkerGrid(r2.cbcUMAP, r2.louvain, r2.pAct, markers, 'PBMC Marker Activity')
library(rmarkdown)
setwd('C://Users/lvlah/linux/ac_lab/single-cell-pipeline/')
render('PISCES_walkthrough.Rmd', output_format = 'html')
render('PISCES_walkthrough.Rmd', output_format = 'html_document')
saveRDS(r2.MRs, file = 'tutorial/pbmc_r2-MRs.rds')
